# ===============================================================
# DEFAULT PROFILE (for local development)
# ===============================================================
spring:
  application:
    name: audiance-backend

  profiles:
    active: ${SPRING_PROFILE:local}

  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:audiancedb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop # Resets DB on each start, perfect for local dev
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: ${SPOTIFY_CLIENT_ID}
            client-secret: ${SPOTIFY_CLIENT_SECRET}
            scope: user-read-email, user-read-private, playlist-modify-public, playlist-modify-private
            authorization-grant-type: authorization_code
            redirect-uri: ${FRONTEND_URL:http://localhost:3000}/auth/callback
        provider:
          spotify:
            authorization-uri: https://accounts.spotify.com/authorize
            token-uri: https://accounts.spotify.com/api/token
            user-info-uri: https://api.spotify.com/v1/me

# Custom Application Properties
app:
  # IMPORTANT: This default JWT secret is for local development ONLY.
  # It MUST be overridden by a secure environment variable in production.
  jwt:
    secret: ${JWT_SECRET:dummy-local-jwt-secret-for-dev-use-only-12345}
    expiration: 86400000 # 24 hours

  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

# IMPORTANT: This default encryption key is for local development ONLY.
# It MUST be overridden by a secure 16-character environment variable in production.
audiance:
  security:
    encryptor-key: ${ENCRYPTOR_KEY:local_encryptkey}

# Server Configuration
server:
  port: ${PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

# Logging
logging:
  level:
    com.audiance: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.security: INFO

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

---
# ===============================================================
# PRODUCTION PROFILE
# ===============================================================

# In your PRODUCTION PROFILE
spring:
  config:
    activate:
      on-profile: production

  datasource:
    # Datasource properties will now be read directly from environment variables
    driver-class-name: org.postgresql.Driver

server:
  error:
    include-message: never
    include-binding-errors: never

springdoc:
  swagger-ui:
    enabled: false

logging:
  level:
    com.audiance: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN